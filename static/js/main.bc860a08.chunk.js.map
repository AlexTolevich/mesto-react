{"version":3,"sources":["images/logo-mesto.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","link","name","counterLikes","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","onClick","type","Main","onEditAvatar","onAddPlace","onEditProfile","cards","avatar","about","map","length","Footer","lang","PopupWithForm","title","buttonTitle","isOpen","onClose","onSubmit","children","onCloseOverlayClick","ImagePopup","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","all","getUserInfo","getInitialCards","fetch","then","_checkResponse","data","method","body","JSON","stringify","description","id","liked","authorization","EditProfilePopup","onUpdateUser","useState","setName","setDescription","useEffect","event","preventDefault","placeholder","minLength","maxLength","value","onChange","target","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","e","ref","AddPlacePopup","nameCard","setNameCard","linkCard","setLinkCard","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeOverlayClick","classList","contains","closeAllPopups","handleEscClose","key","getAppInfo","userInfoRes","cardListRes","catch","err","console","log","document","addEventListener","removeEventListener","Provider","updateCardLike","newCard","state","c","delCard","deleteCard","filter","currentCard","setUserInfo","user","postNewCard","setAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc860a08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-mesto.b8ac1065.svg\";","import logo from '../images/logo-mesto.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img\r\n                src={logo}\r\n                alt=\"Логотип Место\"\r\n                className=\"header__logo\"\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React                from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Card({link, name, counterLikes, card, onCardClick, onCardLike, onCardDelete}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n// Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (`element__like ${isLiked && 'element__like_active'}`);\r\n\r\n    function handleCardClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        onCardLike(card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n\r\n    return (\r\n        <article className=\"element\">\r\n            <img src={link} alt={`Фото ${name}`} className=\"element__photo\" onClick={handleCardClick}/>\r\n            <div className=\"element__title-container\">\r\n                <h2 className=\"element__title\">{name}</h2>\r\n                <div className=\"element__like-container\">\r\n                    <button\r\n                        aria-label=\"Отметить нравится\"\r\n                        type=\"button\"\r\n                        className={cardLikeButtonClassName}\r\n                        onClick={handleLikeClick}\r\n                    />\r\n                    <span className=\"element__likes-count\">{counterLikes}</span>\r\n                </div>\r\n            </div>\r\n            {isOwn && <button\r\n                aria-label=\"Удалить карточку\"\r\n                type=\"button\"\r\n                className=\"element__remove\"\r\n                onClick={handleDeleteClick}\r\n            />}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Card","import React                from 'react';\r\nimport Card                 from './Card.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main({onEditAvatar, onAddPlace, onEditProfile, onCardClick, cards, onCardLike, onCardDelete}) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <img\r\n                        src={currentUser.avatar}\r\n                        alt=\"аватар профиля\"\r\n                        className=\"profile__avatar\"\r\n                        onClick={onEditAvatar}\r\n                    />\r\n                    <div className=\"profile__info\">\r\n                        <div className=\"profile__name-container\">\r\n                            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                            <button\r\n                                aria-label=\"Редактировать профиль\"\r\n                                type=\"button\"\r\n                                className=\"profile__edit-button\"\r\n                                onClick={onEditProfile}\r\n                            />\r\n                        </div>\r\n                        <p className=\"profile__job\">{currentUser.about}</p>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    aria-label=\"Добавить карточку\"\r\n                    type=\"button\"\r\n                    className=\"profile__add-button\"\r\n                    onClick={onAddPlace}\r\n                />\r\n            </section>\r\n\r\n            <section aria-label=\"Галерея фотографий\" className=\"elements\">\r\n                {cards.map((card) => (\r\n                        <Card\r\n                            key={card._id}\r\n                            link={card.link}\r\n                            name={card.name}\r\n                            counterLikes={card.likes.length}\r\n                            card={card}\r\n                            onCardClick={onCardClick}\r\n                            onCardLike={onCardLike}\r\n                            onCardDelete={onCardDelete}\r\n                        />\r\n                    )\r\n                )}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\" lang=\"en\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","function PopupWithForm({name, title, buttonTitle, isOpen, onClose, onSubmit, children, onCloseOverlayClick}) {\r\n    return (\r\n        <div className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`} onClick={onCloseOverlayClick}>\r\n            <div className={`popup__container popup__container_type_${name}`}>\r\n                <button\r\n                    aria-label=\"Закрыть окно подтверждения\"\r\n                    type=\"button\"\r\n                    className=\"popup__close-button\"\r\n                    onClick={onClose}\r\n                />\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                <form name={name} className={`popup__form popup__form_type_${name}`} onSubmit={onSubmit}>\r\n                    {children}\r\n                    <button type=\"submit\" className=\"popup__button\">{buttonTitle}</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","function ImagePopup({card, onClose, onCloseOverlayClick}) {\r\n    return (\r\n        <div className={`popup popup_type_full-screen ${card ? 'popup_opened' : ''}`} onClick={onCloseOverlayClick}>\r\n            <div className=\"popup__image-container\">\r\n                <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\"/>\r\n                <p className=\"popup__image-caption\">{card ? card.name : ''}</p>\r\n                <button\r\n                    aria-label=\"Закрыть окно просмотра фотографий\"\r\n                    type=\"button\"\r\n                    className=\"popup__close-button\"\r\n                    onClick={onClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        } else {\r\n            return Promise.reject(res.status)\r\n        }\r\n        // return res => res.ok ? res.json() : Promise.reject(res.status);\r\n    }\r\n\r\n    /**\r\n     * promiseAll для получения данных пользователя и карточек с сервера\r\n     * @returns {Promise<any[]>}\r\n     */\r\n    getAppInfo() {\r\n        return Promise.all([this.getUserInfo(), this.getInitialCards()])\r\n    }\r\n\r\n    /**\r\n     *публичный метод загрузки данных пользователя с сервера\r\n     * @returns {Promise<any>}\r\n     */\r\n    getUserInfo() {\r\n        return fetch(`${this._baseUrl}users/me`, {headers: this._headers})\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    setAvatar(data) {\r\n        return fetch(`${this._baseUrl}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({avatar: data.avatar})\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    setUserInfo(data) {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({name: data.name, about: data.description})\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}cards`, {headers: this._headers})\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    postNewCard(data) {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({name: data.name, link: data.link})\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._baseUrl}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n\r\n    updateCardLike(id, liked) {\r\n        return fetch(`${this._baseUrl}cards/likes/${id}`, {\r\n            method: liked ? 'PUT' : 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n            .then(this._checkResponse);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-29/',\r\n    headers: {\r\n        authorization: 'af44a922-d278-427e-a751-f282a0177a52',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport {api}\r\n\r\n","import PopupWithForm        from './PopupWithForm.js';\r\nimport React                from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, onCloseOverlayClick}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    function handleChangeName(event) {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(event) {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            description,\r\n        });\r\n    }\r\n\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    React.useEffect(() => {\r\n        if (isOpen) {\r\n            setName(currentUser.name);\r\n            setDescription(currentUser.about);\r\n        }\r\n    }, [currentUser, isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"edit\"\r\n            title=\"Редактировать профиль\"\r\n            buttonTitle=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlayClick={onCloseOverlayClick}\r\n        >\r\n            <input\r\n                aria-label=\"Ваше имя\"\r\n                type=\"text\"\r\n                name=\"popup_name\"\r\n                id=\"popup_name\"\r\n                className=\"popup__input popup__input_is_name\"\r\n                placeholder=\"Введите Ваше имя\"\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                value={name}\r\n                onChange={handleChangeName}\r\n                required\r\n            />\r\n            <span id=\"popup-name-error\" className=\"popup__error\"/>\r\n            <input\r\n                aria-label=\"Род деятельности\"\r\n                type=\"text\"\r\n                name=\"popup_job\"\r\n                id=\"popup_job\"\r\n                className=\"popup__input popup__input_is_job\"\r\n                placeholder=\"Введите Ваш род деятельности\"\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                value={description}\r\n                onChange={handleChangeDescription}\r\n                required\r\n            />\r\n            <span id=\"popup-job-error\" className=\"popup__error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","import PopupWithForm from './PopupWithForm.js';\r\nimport React         from 'react';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, onCloseOverlayClick}) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar({avatar: avatarRef.current.value});\r\n    }\r\n\r\n    React.useEffect(() => {\r\n            avatarRef.current.value = ''\r\n        }, [isOpen]\r\n    )\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"avatar\"\r\n            title=\"Обновить аватар\"\r\n            buttonTitle=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlayClick={onCloseOverlayClick}\r\n        >\r\n            <input\r\n                aria-label=\"Ссылка на аватар\"\r\n                type=\"url\"\r\n                name=\"avatar\"\r\n                id=\"avatar-img-link\"\r\n                className=\"popup__input popup__input_type_avatar-link\"\r\n                required\r\n                placeholder=\"Ссылка на аватар\"\r\n                ref={avatarRef}\r\n            />\r\n            <span id=\"avatar-img-link-error\" className=\"popup__error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import PopupWithForm from './PopupWithForm.js';\r\nimport React         from 'react';\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlace, onCloseOverlayClick}) {\r\n    const [nameCard, setNameCard] = React.useState('')\r\n    const [linkCard, setLinkCard] = React.useState('')\r\n\r\n    function handleChangeCardName(event) {\r\n        setNameCard(event.target.value);\r\n    }\r\n\r\n    function handleChangeCardLink(event) {\r\n        setLinkCard(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onAddPlace({\r\n            name: nameCard,\r\n            link: linkCard,\r\n        });\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        setNameCard('');\r\n        setLinkCard('');\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"add\"\r\n            title=\"Новое место\"\r\n            buttonTitle=\"Создать\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            onCloseOverlayClick={onCloseOverlayClick}\r\n        >\r\n            <input\r\n                aria-label=\"Название фото\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"place-name\"\r\n                className=\"popup__input popup__input_is_place-name\"\r\n                required\r\n                placeholder=\"Название\"\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                onChange={handleChangeCardName}\r\n                value={nameCard}\r\n            />\r\n            <span id=\"place-name-error\" className=\"popup__error\"/>\r\n            <input\r\n                aria-label=\"Ссылка на картинку\"\r\n                type=\"url\"\r\n                name=\"link\"\r\n                id=\"place-img-link\"\r\n                className=\"popup__input popup__input_is_img-link\"\r\n                required\r\n                placeholder=\"Ссылка на картинку\"\r\n                onChange={handleChangeCardLink}\r\n                value={linkCard}\r\n            />\r\n            <span id=\"place-img-link-error\" className=\"popup__error\"/>\r\n        </PopupWithForm>\r\n\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","import React                from 'react';\nimport Header               from './Header.js';\nimport Main                 from './Main.js';\nimport Footer               from './Footer.js';\nimport PopupWithForm        from './PopupWithForm.js';\nimport ImagePopup           from './ImagePopup.js';\nimport {api}                from '../utils/api.js';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup     from './EditProfilePopup.js';\nimport EditAvatarPopup      from './EditAvatarPopup.js';\nimport AddPlacePopup        from './AddPlacePopup.js';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api\n            .updateCardLike(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(`Ошибка изменения данных лайка: ${err}`);\n            });\n    }\n\n    function handleCardDelete(delCard) {\n        api\n            .deleteCard(delCard._id)\n            .then(() => setCards(cards.filter(currentCard => currentCard._id !== delCard._id)))\n            .catch((err) => {\n                console.log(`Ошибка удаления карточки: ${err}`);\n            });\n    }\n\n    React.useEffect(() => {\n        api\n            .getAppInfo()\n            .then(([userInfoRes, cardListRes]) => {\n                setCurrentUser(userInfoRes);\n                setCards(cardListRes);\n            })\n            .catch((err) => {\n                console.log(`Ошибка загрузки данных: ${err}`);\n            });\n\n        function handleEscClose(event) {\n            if (event.key === 'Escape') {\n                closeAllPopups()\n            }\n        }\n        document.addEventListener('keyup', handleEscClose)\n        return () =>\n            document.removeEventListener('keyup', handleEscClose)\n    }, [])\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleUpdateUser(data) {\n        api\n            .setUserInfo(data)\n            .then((user) => {\n                setCurrentUser(user);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка обновления данных профиля: ${err}`);\n            })\n    }\n\n    function handleUpdateAvatar(data) {\n        api\n            .setAvatar(data)\n            .then((userInfoRes) => {\n                setCurrentUser(userInfoRes);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка обновления аватара: ${err}`);\n            })\n    }\n\n    function handleAddPlaceSubmit(data) {\n        api\n            .postNewCard(data)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка добавления карточки: ${err}`);\n            })\n    }\n\n    function closeOverlayClick(event) {\n        if (event.target.classList.contains('popup_opened')) {\n            closeAllPopups()\n        }\n    }\n\n    function closeAllPopups() {\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setSelectedCard(null);\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header/>\n\n                <Main\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    cards={cards}\n                />\n\n                <Footer/>\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onCloseOverlayClick={closeOverlayClick}\n                />\n\n                <PopupWithForm\n                    name=\"confirmation\"\n                    title=\"Вы уверены?\"\n                    isOpen={false}\n                    onClose={closeAllPopups}\n                    onCloseOverlayClick={closeOverlayClick}\n                    buttonTitle=\"Да\"\n                />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React           from 'react';\nimport ReactDOM        from 'react-dom';\nimport './index.css';\nimport App             from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}